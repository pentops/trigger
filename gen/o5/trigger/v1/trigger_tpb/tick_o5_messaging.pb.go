// Code generated by protoc-gen-go-o5-messaging. DO NOT EDIT.
// versions:
// - protoc-gen-go-o5-messaging 0.0.0
// source: o5/trigger/v1/topic/tick.proto

package trigger_tpb

import (
	context "context"
	o5msg "github.com/pentops/o5-messaging/o5msg"
)

// Service: SelfTickTopic
// Method: SelfTick

func (msg *SelfTickMessage) O5MessageHeader() o5msg.Header {
	header := o5msg.Header{
		GrpcService:      "o5.trigger.v1.topic.SelfTickTopic",
		GrpcMethod:       "SelfTick",
		Headers:          map[string]string{},
		DestinationTopic: "selftick",
	}
	return header
}

type SelfTickTopicTxSender[C any] struct {
	sender o5msg.TxSender[C]
}

func NewSelfTickTopicTxSender[C any](sender o5msg.TxSender[C]) *SelfTickTopicTxSender[C] {
	sender.Register(o5msg.TopicDescriptor{
		Service: "o5.trigger.v1.topic.SelfTickTopic",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "SelfTick",
				Message: (*SelfTickMessage).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &SelfTickTopicTxSender[C]{sender: sender}
}

type SelfTickTopicCollector[C any] struct {
	collector o5msg.Collector[C]
}

func NewSelfTickTopicCollector[C any](collector o5msg.Collector[C]) *SelfTickTopicCollector[C] {
	collector.Register(o5msg.TopicDescriptor{
		Service: "o5.trigger.v1.topic.SelfTickTopic",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "SelfTick",
				Message: (*SelfTickMessage).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &SelfTickTopicCollector[C]{collector: collector}
}

type SelfTickTopicPublisher struct {
	publisher o5msg.Publisher
}

func NewSelfTickTopicPublisher(publisher o5msg.Publisher) *SelfTickTopicPublisher {
	publisher.Register(o5msg.TopicDescriptor{
		Service: "o5.trigger.v1.topic.SelfTickTopic",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "SelfTick",
				Message: (*SelfTickMessage).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &SelfTickTopicPublisher{publisher: publisher}
}

// Method: SelfTick

func (send SelfTickTopicTxSender[C]) SelfTick(ctx context.Context, sendContext C, msg *SelfTickMessage) error {
	return send.sender.Send(ctx, sendContext, msg)
}

func (collect SelfTickTopicCollector[C]) SelfTick(sendContext C, msg *SelfTickMessage) {
	collect.collector.Collect(sendContext, msg)
}

func (publish SelfTickTopicPublisher) SelfTick(ctx context.Context, msg *SelfTickMessage) error {
	return publish.publisher.Publish(ctx, msg)
}
